def props = new Properties()
file("../gradle.properties").withInputStream {
    stream -> props.load(stream)
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "${System.env.ANDROID_HOME}/extras/android/m2repository" }
    maven { url "${System.env.ANDROID_HOME}/extras/google/m2repository" }
}

apply plugin: 'groovy'

dependencies {
    compile "org.codehaus.groovy:groovy-all:1.8.6"
    compile 'org.robospock:robospock:0.5.0'
    compile 'cglib:cglib-nodep:3.1'

    compile 'com.android.support:support-v13:20.0.0'

    compile project(":App")

    compile fileTree(dir: project(":App").file("build/libs"), include: "*.jar")
    compile fileTree(dir: project(":AppLibrary").file("build/libs"), include: "*.jar")

    // this part is really ugly
    // XXX question for pjakubczyk@ why dependencies registered via compile are not visible?
    // ie. the following line:
    //    compile 'com.android.support:appcompat-v7:20.0.0'
    // does nothing :-/
    compile fileTree(dir: project(":AppLibrary").file('build/intermediates/exploded-aar/'), include: ['*/*/*/*.jar'])
    compile fileTree(dir: project(":AppLibrary").file('build/intermediates/exploded-aar/'), include: ['*/*/*/*/*.jar'])
}

sourceSets.test.java.srcDirs += ['../App/build/generated/source/r/release']

test {
    // enable TestNG support (default is JUnit)

    // set a system property for the test JVM(s)
    systemProperty 'ro.build.date.utc', '1'
    systemProperty 'ro.kernel.qemu', '0'
    // explicitly include or exclude tests

    systemProperty 'android.manifest', '../App/src/main/AndroidManifest.xml'
    systemProperty 'android.resources', '../App/build/intermediates/res/release'
    systemProperty 'android.assets', '../App/build/intermediates/res/release/raw'

    // set heap size for the test JVM(s)
    minHeapSize = "128m" // try with 64mb, might decrease startup time
    maxHeapSize = "1024m"

    // set JVM arguments for the test JVM(s)
    jvmArgs '-XX:MaxPermSize=512m'

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    testLogging {
        lifecycle {
            exceptionFormat "full"
        }
    }
}

tasks["compileJava"].dependsOn(":App:zip2jar", ":AppLibrary:zip2jar")
